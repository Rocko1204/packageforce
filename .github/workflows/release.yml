name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        type: boolean
        default: false
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm test

      - name: Build Extension
        run: npm run package

      - name: Install vsce
        run: npm install -g @vscode/vsce

      - name: Package Extension
        run: vsce package

      - name: Get Version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          release_name: Release v${{ steps.version.outputs.VERSION }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease || false }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./packageforce-${{ steps.version.outputs.VERSION }}.vsix
          asset_name: packageforce-${{ steps.version.outputs.VERSION }}.vsix
          asset_content_type: application/zip

      # Optional: Publish to VS Code Marketplace
      # Uncomment these steps when you have a publisher token
      # - name: Publish to VS Code Marketplace
      #   if: ${{ github.event.inputs.prerelease != 'true' }}
      #   run: vsce publish -p ${{ secrets.VSCE_TOKEN }}
      #   env:
      #     VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}

      # Optional: Publish to Open VSX Registry
      # - name: Publish to Open VSX
      #   if: ${{ github.event.inputs.prerelease != 'true' }}
      #   run: npx ovsx publish -p ${{ secrets.OVSX_TOKEN }}
      #   env:
      #     OVSX_TOKEN: ${{ secrets.OVSX_TOKEN }}